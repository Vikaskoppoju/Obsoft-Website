# Generated by Django 4.0.5 on 2023-07-27 08:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='co_pso_Matrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cos', models.CharField(default='', max_length=10)),
                ('po1', models.CharField(default='', max_length=10)),
                ('po2', models.CharField(default='', max_length=10)),
                ('po3', models.CharField(default='', max_length=10)),
                ('po4', models.CharField(default='', max_length=10)),
                ('po5', models.CharField(default='', max_length=10)),
                ('po6', models.CharField(default='', max_length=10)),
                ('po7', models.CharField(default='', max_length=10)),
                ('po8', models.CharField(default='', max_length=10)),
                ('po9', models.CharField(default='', max_length=10)),
                ('po10', models.CharField(default='', max_length=10)),
                ('po11', models.CharField(default='', max_length=10)),
                ('po12', models.CharField(default='', max_length=10)),
                ('pso1', models.CharField(default='', max_length=10)),
                ('pso2', models.CharField(default='', max_length=10)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='course_end_survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.CharField(default='1', max_length=5)),
                ('cos', models.CharField(default='', max_length=5)),
                ('question', models.CharField(default='', max_length=100)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='courseoutcomes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('co', models.CharField(default='1', max_length=5)),
                ('courseoutcome', models.CharField(max_length=100)),
                ('knowledge_level', models.CharField(default='K1', max_length=5)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sno', models.IntegerField()),
                ('Coursenam', models.CharField(max_length=100)),
                ('Coursecode', models.CharField(max_length=100)),
                ('Regulation', models.CharField(max_length=100)),
                ('year', models.CharField(max_length=50)),
                ('semister', models.CharField(max_length=50)),
                ('branch', models.CharField(default='-', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='details_of_instructors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.CharField(default='1', max_length=5)),
                ('name', models.CharField(default='', max_length=100)),
                ('designation', models.CharField(default='', max_length=100)),
                ('year', models.CharField(default='', max_length=20)),
                ('section', models.CharField(default='', max_length=20)),
                ('contactno', models.CharField(default='', max_length=30)),
                ('email', models.CharField(default='', max_length=50)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='lectureplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.CharField(default='1', max_length=5)),
                ('course_outcome', models.CharField(default='CO1', max_length=10)),
                ('ilo', models.CharField(default='', max_length=100)),
                ('knowledgelevel', models.CharField(default='', max_length=5)),
                ('noof_hours', models.CharField(default='', max_length=5)),
                ('pedagogy', models.CharField(default='', max_length=50)),
                ('teachingaids', models.CharField(default='', max_length=10)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='lessonplanBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.CharField(max_length=20)),
                ('academicyear', models.CharField(max_length=20)),
                ('programme', models.CharField(max_length=20)),
                ('semester', models.CharField(max_length=20)),
                ('section', models.CharField(max_length=10)),
                ('name_of_the_course', models.CharField(max_length=70)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='referencebooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.CharField(default='1', max_length=5)),
                ('rfbook_details', models.CharField(max_length=200)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sno', models.IntegerField()),
                ('Regulation', models.CharField(max_length=100)),
                ('batch', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='targetproficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('co', models.CharField(default='', max_length=15)),
                ('tpl', models.CharField(default='', max_length=15)),
                ('l3', models.CharField(default='', max_length=15)),
                ('l2', models.CharField(default='', max_length=15)),
                ('l1', models.CharField(default='', max_length=15)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='teachers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('username', models.CharField(default='sushma kurella', max_length=80)),
                ('passwd', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='textbooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.CharField(default=1, max_length=5)),
                ('textbook_details', models.CharField(max_length=200)),
                ('course_code', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sno', models.CharField(default=0, max_length=100)),
                ('Designation', models.CharField(max_length=100)),
                ('UName', models.CharField(default='None', max_length=200)),
                ('Permissions', models.CharField(max_length=1000)),
                ('Biometricid', models.CharField(max_length=100)),
                ('branch', models.CharField(default='None', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
